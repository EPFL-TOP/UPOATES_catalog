# Generated by Django 3.2.5 on 2023-08-14 12:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('rawdata_catalog', '0077_rename_experimentaldata_experimentaldataset'),
    ]

    operations = [
        migrations.AddField(
            model_name='experimentaldataset',
            name='experiment',
            field=models.ForeignKey(default='', help_text='Select experimental datasets for this experiment', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='rawdata_catalog.experiment'),
        ),
        migrations.AlterField(
            model_name='experimentaldataset',
            name='compression',
            field=models.CharField(blank=True, choices=[('none', 'None'), ('jeraw', 'JetRaw'), ('zip', 'Zip'), ('tar', 'Tar')], default='none', help_text='Type of compression if any', max_length=100),
        ),
        migrations.AlterField(
            model_name='experimentaldataset',
            name='data_status',
            field=models.CharField(blank=True, choices=[('available', 'Available'), ('notavailable', 'Not available'), ('deleted', 'Deleted')], default='', help_text='Status of the data on the RCP storage', max_length=100),
        ),
        migrations.AlterField(
            model_name='experimentaldataset',
            name='data_type',
            field=models.CharField(choices=[('none', 'None'), ('microscopy/in_vitro', 'Microscopy, in-vitro'), ('microscopy/in_vivo', 'Microscopy, in-vivo'), ('sequencing/CUTandTAG', 'Sequencing, Cut&Tag'), ('sequencing/scRNA-seq', 'Sequencing, scRNA'), ('sequencing/scMultiome-seq', 'Sequencing, scMultiome')], default='none', help_text='Type of data (reflecting the the RCP storage categories)', max_length=100),
        ),
        migrations.AlterField(
            model_name='experimentaldataset',
            name='file_format',
            field=models.CharField(blank=True, choices=[('none', 'None'), ('tiff', 'tiff'), ('nd2', 'nd2'), ('fastq', 'fastq')], default='none', help_text='Format of the files', max_length=100),
        ),
        migrations.AlterField(
            model_name='experimentaldataset',
            name='number_of_files',
            field=models.CharField(blank=True, default='', help_text='Number of files for this dataset. FILLED AUTOMATICALLY', max_length=10),
        ),
        migrations.AlterField(
            model_name='experimentaldataset',
            name='rcp_name',
            field=models.CharField(choices=[('her1_Dr_GFPpoly_S17', 'her1_Dr_GFPpoly_S17'), ('her1_Dr_H2AZ_S19', 'her1_Dr_H2AZ_S19'), ('her1_Dr_Neg_S20', 'her1_Dr_Neg_S20'), ('her1_Dr_VenusAb_S18', 'her1_Dr_VenusAb_S18'), ('her7_Dr_GFPpoly_S1', 'her7_Dr_GFPpoly_S1'), ('her7_Dr_H2AZ_S3', 'her7_Dr_H2AZ_S3'), ('her7_Dr_Neg_S4', 'her7_Dr_Neg_S4'), ('her7_Dr_Venus_S2', 'her7_Dr_Venus_S2'), ('ppf001_well1', 'ppf001_well1'), ('ppf001_well2', 'ppf001_well2'), ('ppf001_well3', 'ppf001_well3'), ('wildtype_scm_001_01', 'wildtype_scm_001_01'), ('wildtype_scm_001_02', 'wildtype_scm_001_02'), ('wildtype_scm_001_03', 'wildtype_scm_001_03'), ('wildtype_scm_001_04', 'wildtype_scm_001_04'), ('wildtype_scm_001_05', 'wildtype_scm_001_05'), ('wildtype_scm_001_06', 'wildtype_scm_001_06'), ('wildtype_scr_001', 'wildtype_scr_001'), ('wildtype_scr_002', 'wildtype_scr_002'), ('wildtype_scr_003', 'wildtype_scr_003'), ('wildtype_scr_004', 'wildtype_scr_004'), ('wildtype_scr_005_01', 'wildtype_scr_005_01'), ('wildtype_scr_005_02', 'wildtype_scr_005_02'), ('wildtype_scr_005_03', 'wildtype_scr_005_03'), ('wildtype_scr_005_04', 'wildtype_scr_005_04'), ('wildtype_scr_006_01', 'wildtype_scr_006_01'), ('wildtype_scr_006_02', 'wildtype_scr_006_02'), ('wildtype_scr_006_03', 'wildtype_scr_006_03'), ('wildtype_scr_006_04', 'wildtype_scr_006_04'), ('wscepfl060_well1', 'wscepfl060_well1'), ('wscepfl060_well1', 'wscepfl060_well1'), ('wscepfl060_well2', 'wscepfl060_well2')], help_text='Name of the experiment folder on the RCP storage.', max_length=100),
        ),
        migrations.AlterField(
            model_name='experimentaldataset',
            name='total_size',
            field=models.CharField(blank=True, default='', help_text='Total size for this dataset. FILLED AUTOMATICALLY', max_length=100),
        ),
    ]
