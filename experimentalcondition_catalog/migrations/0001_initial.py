# Generated by Django 3.2.5 on 2023-09-19 21:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Injection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Injection name', max_length=200)),
                ('type', models.CharField(choices=[('Mo', 'Mo'), ('mRNA', 'mRNA'), ('CRISPR', 'CRISPR'), ('Gel', 'Gel'), ('Others', 'Others')], default='', help_text='Treatment type', max_length=200)),
                ('developmental_stage', models.CharField(choices=[('1-cell (0.2h)', '1-cell (0.2h)'), ('2-cells (0.75h)', '2-cells (0.75h)'), ('4-cells (1h)', '4-cells (1h)'), ('8-cells (1.25h)', '8-cells (1.25h)'), ('16-cells (1.5h)', '16-cells (1.5h)'), ('32-cells (1.75h)', '32-cells (1.75h)'), ('64-cells (2h)', '64-cells (2h)'), ('128-cells (2.25h)', '128-cells (2.25h)'), ('256-cells (2.5h)', '256-cells (2.5h)'), ('512-cells (2.75h)', '512-cells (2.75h)'), ('1k-cells (3h)', '1k-cells (3.h)'), ('high (3.3h)', 'high (3.3h)'), ('oblong (3.7h)', 'oblong (3.7h)'), ('sphere (4h)', 'sphere (4h)'), ('dome (4.3h)', 'dome (4.3h)'), ('30%-epiboly (4.7h)', '30%-epiboly (4.7h)'), ('50%-epiboly (5.3h)', '50%-epiboly (5.3h)'), ('germ ring (5.7h)', 'germ ring (5.7h)'), ('shield (6h)', 'shield (6h)'), ('75%-epiboly (8h)', '75%-epiboly (8h)'), ('90%-epiboly (9h)', '90%-epiboly (9h)'), ('bud (10h)', 'bud (10h)'), ('3-somites (11h)', '3-somites (11h)'), ('6-somites (12h)', '6-somites (12h)'), ('10-somites (14h)', '10-somites (14h)'), ('14-somites (16h)', '14-somites (16h)'), ('16-somites (18h)', '16-somites (18h)'), ('21-somites (19.5h)', '21-somites (19.5h)'), ('26-somites (22h)', '26-somites (22h)'), ('prim-6 (25h)', 'prim-6 (25h)'), ('prim-16 (31h)', 'prim-16 (31h)'), ('prim-22 (35h)', 'prim-22 (35h)'), ('high pec (42h)', 'high pec (42h)'), ('long pec (48h)', 'long pec (48h)')], default='', help_text='Developmental stage', max_length=100)),
                ('concentration', models.CharField(blank=True, default='', help_text='Injection concentration', max_length=20)),
                ('slim_id', models.CharField(blank=True, help_text='SLIMs ID', max_length=10)),
                ('description', models.TextField(blank=True, help_text='Enter a brief description of the injection', max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentalCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument_type', models.CharField(choices=[('microscopy', 'microscopy'), ('sequencing', 'sequencing')], default='', help_text='Type of instrument', max_length=100)),
                ('instrument_name', models.CharField(choices=[('viventis1', 'viventis1'), ('viventis2', 'viventis2'), ('nikon', 'nikon'), ('zeiss', 'zeiss'), ('MiSeq', 'MiSeq'), ('NextSeq500', 'NextSeq500'), ('NovaSeq6000', 'NovaSeq6000')], default='', help_text='Name of instrument', max_length=100)),
                ('laser_intensity', models.CharField(blank=True, default='', help_text='Laser intensity', max_length=100)),
                ('laser_wavelength', models.CharField(blank=True, default='', help_text='Laser wave length', max_length=100)),
                ('temperature', models.CharField(blank=True, default='', help_text='Instrument temperature', max_length=100)),
                ('total_read', models.CharField(blank=True, choices=[('1', '1'), ('4', '4'), ('15', '15'), ('25', '25'), ('130', '130'), ('400', '400'), ('800', '800'), ('1600', '1600'), ('4000', '4000'), ('10000', '10000')], default='', help_text='Total number of reads', max_length=100)),
                ('read_config', models.CharField(blank=True, choices=[('50 (SR50)', '50 (SR50)'), ('100 (SR100)', '100 (SR100)'), ('60/60 (PE60)', '60/60 (PE60)'), ('150 (SR150)', '150 (SR150)'), ('100/100 (PE100)', '100/100 (PE100)'), ('150/150 (PE150)', '150/150 (PE150)'), ('250/250 (PE250)', '250/250 (PE250)'), ('21/90 (BRB-Seq dual index)', '21/90 (BRB-Seq dual index)'), ("28/90 (10XG 3'GE v3)", "28/90 (10XG 3'GE v3)"), ("26/90 (10XG 5'GE v2)", "26/90 (10XG 5'GE v2)")], default='', help_text='Read configuration', max_length=100)),
            ],
            options={
                'ordering': ('instrument_type', 'instrument_name'),
            },
        ),
        migrations.CreateModel(
            name='Mutation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ('name', 'grade'),
            },
        ),
        migrations.CreateModel(
            name='MutationGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(default='', help_text='Grade of the mutation.', max_length=200)),
            ],
            options={
                'ordering': ('grade',),
            },
        ),
        migrations.CreateModel(
            name='MutationName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Name of the mutation.', max_length=200)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_female', models.CharField(default='', help_text='Number of female', max_length=5)),
                ('number_of_unknown', models.CharField(default='', help_text='Number of unknown', max_length=5)),
                ('strain_name', models.CharField(default='', help_text='Parent strain', max_length=100)),
                ('date_of_birth', models.DateField(help_text='Parents date of birth', null=True)),
                ('age_at_crossing', models.CharField(default='', help_text='Age at crossing in days', max_length=5)),
                ('pyrat_crossing_id', models.CharField(default='', help_text='Pyrat crossing id', max_length=10)),
                ('mutation_grade', models.CharField(default='', help_text='Parents mutation(s)', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Treatment name', max_length=200)),
                ('type', models.CharField(choices=[('Chemical', 'Chemical'), ('HeatShock', 'HeatShock'), ('Mechanical', 'Mechanical'), ('Light', 'Light')], default='', help_text='Treatment type', max_length=200)),
                ('developmental_stage', models.CharField(blank=True, choices=[('1-cell (0.2h)', '1-cell (0.2h)'), ('2-cells (0.75h)', '2-cells (0.75h)'), ('4-cells (1h)', '4-cells (1h)'), ('8-cells (1.25h)', '8-cells (1.25h)'), ('16-cells (1.5h)', '16-cells (1.5h)'), ('32-cells (1.75h)', '32-cells (1.75h)'), ('64-cells (2h)', '64-cells (2h)'), ('128-cells (2.25h)', '128-cells (2.25h)'), ('256-cells (2.5h)', '256-cells (2.5h)'), ('512-cells (2.75h)', '512-cells (2.75h)'), ('1k-cells (3h)', '1k-cells (3.h)'), ('high (3.3h)', 'high (3.3h)'), ('oblong (3.7h)', 'oblong (3.7h)'), ('sphere (4h)', 'sphere (4h)'), ('dome (4.3h)', 'dome (4.3h)'), ('30%-epiboly (4.7h)', '30%-epiboly (4.7h)'), ('50%-epiboly (5.3h)', '50%-epiboly (5.3h)'), ('germ ring (5.7h)', 'germ ring (5.7h)'), ('shield (6h)', 'shield (6h)'), ('75%-epiboly (8h)', '75%-epiboly (8h)'), ('90%-epiboly (9h)', '90%-epiboly (9h)'), ('bud (10h)', 'bud (10h)'), ('3-somites (11h)', '3-somites (11h)'), ('6-somites (12h)', '6-somites (12h)'), ('10-somites (14h)', '10-somites (14h)'), ('14-somites (16h)', '14-somites (16h)'), ('16-somites (18h)', '16-somites (18h)'), ('21-somites (19.5h)', '21-somites (19.5h)'), ('26-somites (22h)', '26-somites (22h)'), ('prim-6 (25h)', 'prim-6 (25h)'), ('prim-16 (31h)', 'prim-16 (31h)'), ('prim-22 (35h)', 'prim-22 (35h)'), ('high pec (42h)', 'high pec (42h)'), ('long pec (48h)', 'long pec (48h)')], default='', help_text='Developmental stage', max_length=100)),
                ('temperature', models.CharField(blank=True, default='', help_text='Treatment temperature', max_length=20)),
                ('duration', models.CharField(blank=True, default='', help_text='Treatment duration', max_length=20)),
                ('concentration', models.CharField(blank=True, default='', help_text='Treatment concentration', max_length=20)),
                ('solvent', models.CharField(blank=True, default='', help_text='Treatment solvent', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Enter a description of the treatment', max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specie', models.CharField(choices=[('zebrafish', 'Zebra fish')], default='zebrafish', help_text='Type of animal(s) used for this experimental dataset.', max_length=100)),
                ('developmental_stage', models.CharField(choices=[('1-cell (0.2h)', '1-cell (0.2h)'), ('2-cells (0.75h)', '2-cells (0.75h)'), ('4-cells (1h)', '4-cells (1h)'), ('8-cells (1.25h)', '8-cells (1.25h)'), ('16-cells (1.5h)', '16-cells (1.5h)'), ('32-cells (1.75h)', '32-cells (1.75h)'), ('64-cells (2h)', '64-cells (2h)'), ('128-cells (2.25h)', '128-cells (2.25h)'), ('256-cells (2.5h)', '256-cells (2.5h)'), ('512-cells (2.75h)', '512-cells (2.75h)'), ('1k-cells (3h)', '1k-cells (3.h)'), ('high (3.3h)', 'high (3.3h)'), ('oblong (3.7h)', 'oblong (3.7h)'), ('sphere (4h)', 'sphere (4h)'), ('dome (4.3h)', 'dome (4.3h)'), ('30%-epiboly (4.7h)', '30%-epiboly (4.7h)'), ('50%-epiboly (5.3h)', '50%-epiboly (5.3h)'), ('germ ring (5.7h)', 'germ ring (5.7h)'), ('shield (6h)', 'shield (6h)'), ('75%-epiboly (8h)', '75%-epiboly (8h)'), ('90%-epiboly (9h)', '90%-epiboly (9h)'), ('bud (10h)', 'bud (10h)'), ('3-somites (11h)', '3-somites (11h)'), ('6-somites (12h)', '6-somites (12h)'), ('10-somites (14h)', '10-somites (14h)'), ('14-somites (16h)', '14-somites (16h)'), ('16-somites (18h)', '16-somites (18h)'), ('21-somites (19.5h)', '21-somites (19.5h)'), ('26-somites (22h)', '26-somites (22h)'), ('prim-6 (25h)', 'prim-6 (25h)'), ('prim-16 (31h)', 'prim-16 (31h)'), ('prim-22 (35h)', 'prim-22 (35h)'), ('high pec (42h)', 'high pec (42h)'), ('long pec (48h)', 'long pec (48h)')], default='', help_text='Developmental stage', max_length=100)),
                ('pyrat_crossing_id', models.CharField(default='', help_text='"Pyrat crossing ID', max_length=10)),
                ('date_of_crossing', models.DateField(blank=True, help_text='Date of cross (automatically filled from pyrat crossing ID)', null=True)),
                ('mutation', models.ManyToManyField(default='', help_text='mutation(s)', related_name='sample_mutation', to='experimentalcondition_catalog.Mutation')),
                ('parent', models.ManyToManyField(blank=True, default='', help_text='Parents information (automatically filled from pyrat crossing ID)', to='experimentalcondition_catalog.Parent')),
            ],
            options={
                'ordering': ('specie', 'developmental_stage'),
            },
        ),
        migrations.AddField(
            model_name='mutation',
            name='grade',
            field=models.ForeignKey(default='', help_text='Grade of the mutation.', on_delete=django.db.models.deletion.CASCADE, to='experimentalcondition_catalog.mutationgrade'),
        ),
        migrations.AddField(
            model_name='mutation',
            name='name',
            field=models.ForeignKey(default='', help_text='Name of the mutation.', on_delete=django.db.models.deletion.CASCADE, to='experimentalcondition_catalog.mutationname'),
        ),
        migrations.CreateModel(
            name='ExperimentalCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, help_text='Date of the experiment', null=True)),
                ('filled', models.CharField(choices=[('False', 'False'), ('True', 'True')], default='False', help_text='Set to True when all experimental conditions are properly filled', max_length=10)),
                ('injection', models.ManyToManyField(blank=True, help_text='Injection(s) for this experimental condition.', to='experimentalcondition_catalog.Injection')),
                ('instrumental_condition', models.ManyToManyField(help_text='Instrumental conditions.', to='experimentalcondition_catalog.InstrumentalCondition')),
                ('sample', models.ManyToManyField(help_text='Biological sample being used for this experimental condition', to='experimentalcondition_catalog.Sample')),
                ('treatment', models.ManyToManyField(blank=True, help_text='Treatment(s) for this experimental condition.', to='experimentalcondition_catalog.Treatment')),
            ],
            options={
                'ordering': ('experimentaldataset__raw_dataset__data_type', 'experimentaldataset__raw_dataset__data_name'),
            },
        ),
    ]
